<Window x:Class="Calendar_with_jokes.ViewDay"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Calendar_with_jokes"
        mc:Ignorable="d"
        Title="ViewDay" Height="450" Width="800" WindowStartupLocation="CenterScreen">
    <Window.Resources>

        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                <GradientStop Color="#FFC4DDFF" Offset="0.0" />
                <GradientStop Color="White" Offset="0.5" />
                <GradientStop Color="#FFFADC96" Offset="1.0" />
            </LinearGradientBrush>
        </Grid.Background>
        <DataGrid x:Name="gridEvents" ItemsSource="{Binding EventsList}" AutoGenerateColumns="False" HorizontalAlignment="Left" Height="160" Margin="24,24,0,0" VerticalAlignment="Top" Width="519" SelectionChanged="gridEvents_SelectionChanged">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Name" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn Header="Kind" Binding="{Binding Kind, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
                <DataGridTextColumn Header="Description" Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}"></DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
        <Button x:Name="btnAdd" Content="Add" HorizontalAlignment="Left" Margin="157,390,0,0" VerticalAlignment="Top" Width="75" FontWeight="Bold" Background ="#FF64CCF1" Foreground="White" Click="BtnAdd_Click" Style="{DynamicResource RoundedButton}"/>
        <TextBox x:Name="txtName" HorizontalAlignment="Left" Height="23" Margin="112,263,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
        <TextBox x:Name="txtKind" HorizontalAlignment="Left" Height="23" Margin="112,308,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
        <TextBox x:Name="txtDescription" HorizontalAlignment="Left" Height="23" Margin="112,352,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
        <TextBlock HorizontalAlignment="Left" Margin="24,263,0,0" TextWrapping="Wrap" Text="Name" VerticalAlignment="Top"/>
        <TextBlock HorizontalAlignment="Left" Margin="24,308,0,0" TextWrapping="Wrap" Text="Kind" VerticalAlignment="Top" RenderTransformOrigin="0.534,-0.125"/>
        <TextBlock HorizontalAlignment="Left" Margin="24,352,0,0" TextWrapping="Wrap" Text="Description" VerticalAlignment="Top"/>
        <Button x:Name="btnUpdate" Content="Update" HorizontalAlignment="Left" Margin="694,163,0,0" VerticalAlignment="Top" Width="75" FontWeight="Bold" Background ="#FF64CCF1" Foreground="White" Click="BtnUpdate_Click" Style="{DynamicResource RoundedButton}"/>
        <TextBox x:Name="txtNameUpd"  HorizontalAlignment="Left" Height="23" Margin="649,39,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
        <TextBox x:Name="txtKindUpd" HorizontalAlignment="Left" Height="23" Margin="649,78,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
        <TextBox x:Name="txtDescriptionUpd" HorizontalAlignment="Left" Height="23" Margin="649,115,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="120"/>
        <TextBlock HorizontalAlignment="Left" Margin="574,39,0,0" TextWrapping="Wrap" Text="Name" VerticalAlignment="Top"/>
        <TextBlock HorizontalAlignment="Left" Margin="574,78,0,0" TextWrapping="Wrap" Text="Kind" VerticalAlignment="Top"/>
        <TextBlock HorizontalAlignment="Left" Margin="574,115,0,0" TextWrapping="Wrap" Text="Description" VerticalAlignment="Top"/>
        <Button x:Name="btnDelete" Content="Delete Event" HorizontalAlignment="Left" Margin="468,206,0,0" VerticalAlignment="Top" Width="75" FontWeight="Bold" Background ="#FF64CCF1" Foreground="White" Click="BtnDelete_Click" Style="{DynamicResource RoundedButton}"/>
        <TextBlock x:Name ="txtJoke" HorizontalAlignment="Left" Margin="330,250,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Height="125" Width="439" FontFamily="Arial" Foreground="Teal"><InlineUIContainer>
                <RichTextBox Height="18" Width="19" RenderTransformOrigin="-2.605,-2.083">
                    <FlowDocument>
                        <Paragraph><Run Text="RichTextBox"/></Paragraph>
                    </FlowDocument>
                </RichTextBox>
            </InlineUIContainer></TextBlock>

    </Grid>
</Window>
